// <auto-generated />
using System;
using System.Collections.Generic;
using CatalogManagement.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CatalogManagement.Infrastructure.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    partial class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CatalogManagement.Domain.ProductAggregate.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductId")
                        .HasColumnOrder(1);

                    b.ComplexProperty<Dictionary<string, object>>("Code", "CatalogManagement.Domain.ProductAggregate.Product.Code#ProductCode", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Code")
                                .HasColumnOrder(2);
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Definition", "CatalogManagement.Domain.ProductAggregate.Product.Definition#ProductDefinition", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Definition")
                                .HasColumnOrder(4);
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "CatalogManagement.Domain.ProductAggregate.Product.Name#ProductName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name")
                                .HasColumnOrder(3);
                        });

                    b.HasKey("Id");

                    b.ToTable("Product", "Catalog");
                });

            modelBuilder.Entity("CatalogManagement.Domain.ProductGroupAggregate.ProductGroup", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductGroupId")
                        .HasColumnOrder(1);

                    b.ComplexProperty<Dictionary<string, object>>("Description", "CatalogManagement.Domain.ProductGroupAggregate.ProductGroup.Description#ProductGroupDescription", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Description")
                                .HasColumnOrder(3);
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "CatalogManagement.Domain.ProductGroupAggregate.ProductGroup.Name#ProductGroupName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name")
                                .HasColumnOrder(2);
                        });

                    b.HasKey("Id");

                    b.ToTable("ProductGroup", "Catalog");
                });
#pragma warning restore 612, 618
        }
    }
}
