// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreDefinition.Infrastructure.Persistence;

#nullable disable

namespace StoreDefinition.Infrastructure.Migrations
{
    [DbContext(typeof(StoreDefinitionDbContext))]
    partial class StoreDefinitionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StoreDefinition.Domain.GroupAggregateRoot.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GroupId")
                        .HasColumnOrder(0);

                    b.PrimitiveCollection<string>("ShopIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ShopIds");

                    b.ComplexProperty<Dictionary<string, object>>("Description", "StoreDefinition.Domain.GroupAggregateRoot.Group.Description#GroupDescription", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Description")
                                .HasColumnOrder(2);
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Name", "StoreDefinition.Domain.GroupAggregateRoot.Group.Name#GroupName", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Name")
                                .HasColumnOrder(1);
                        });

                    b.HasKey("Id");

                    b.ToTable("Group", (string)null);
                });

            modelBuilder.Entity("StoreDefinition.Domain.ShopAggregateRoot.Shop", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ShopId")
                        .HasColumnOrder(1);

                    b.PrimitiveCollection<string>("GroupIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GroupIds");

                    b.ComplexProperty<Dictionary<string, object>>("Description", "StoreDefinition.Domain.ShopAggregateRoot.Shop.Description#ShopDescription", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Description")
                                .HasColumnOrder(1);
                        });

                    b.HasKey("Id");

                    b.ToTable("Shop", (string)null);
                });

            modelBuilder.Entity("StoreDefinition.Domain.ShopAggregateRoot.Shop", b =>
                {
                    b.OwnsOne("StoreDefinition.Domain.ShopAggregateRoot.Entities.ShopAddress", "Address", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("ShopAddressId")
                                .HasColumnOrder(0);

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("City")
                                .HasColumnOrder(1);

                            b1.Property<Guid>("ShopId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Street")
                                .HasColumnOrder(2);

                            b1.HasKey("Id");

                            b1.HasIndex("ShopId")
                                .IsUnique();

                            b1.ToTable("ShopAddress", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("ShopId");
                        });

                    b.Navigation("Address")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
